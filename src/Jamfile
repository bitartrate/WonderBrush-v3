SubDir TOP src ;

# source directories
local sourceDirs =
#	alm
	commands
	gui
	gui/$(WONDERBRUSH_PLATFORM)
	gui/misc
	gui/misc/$(WONDERBRUSH_PLATFORM)
	gui/tools
	gui/tools/$(WONDERBRUSH_PLATFORM)
	model
	model/document
	model/fills
	model/objects
	model/snapshots
	platform/$(WONDERBRUSH_PLATFORM)
	render
	render/text
	support
	tools
	tools/brush
	tools/pick
	tools/text
	tools/transform
;

local sourceDir ;
for sourceDir in $(sourceDirs) {
	SEARCH_SOURCE += [ FDirName $(TOP) src $(sourceDir) ] ;
}

# system include directories
local sysIncludeDirs =
	agg/font_freetype
	agg/include
	cimg
;

local sysIncludeDir ;
for sysIncludeDir in $(sysIncludeDirs) {
	SubDirSysHdrs [ FDirName $(TOP) src $(sysIncludeDir) ] ;
}

# local include directories

# <pe-inc>
SubDirHdrs [ FDirName $(TOP) src columntreeview ] ;
SubDirHdrs [ FDirName $(TOP) src commands ] ;
SubDirHdrs [ FDirName $(TOP) src gui ] ;
SubDirHdrs [ FDirName $(TOP) src gui colorpicker ] ;
SubDirHdrs [ FDirName $(TOP) src gui columntreeview ] ;
SubDirHdrs [ FDirName $(TOP) src gui $(WONDERBRUSH_PLATFORM) ] ;
SubDirHdrs [ FDirName $(TOP) src gui icons ] ;
SubDirHdrs [ FDirName $(TOP) src gui misc ] ;
SubDirHdrs [ FDirName $(TOP) src gui misc $(WONDERBRUSH_PLATFORM) ] ;
SubDirHdrs [ FDirName $(TOP) src gui popupcontrol ] ;
SubDirHdrs [ FDirName $(TOP) src gui propertylistview ] ;
SubDirHdrs [ FDirName $(TOP) src gui propertylistview
	specific_properties ] ;
SubDirHdrs [ FDirName $(TOP) src gui scrollview ] ;
SubDirHdrs [ FDirName $(TOP) src gui scrollview $(WONDERBRUSH_PLATFORM) ] ;
SubDirHdrs [ FDirName $(TOP) src gui stateview ] ;
SubDirHdrs [ FDirName $(TOP) src model ] ;
SubDirHdrs [ FDirName $(TOP) src model document ] ;
SubDirHdrs [ FDirName $(TOP) src model fills ] ;
SubDirHdrs [ FDirName $(TOP) src model objects ] ;
SubDirHdrs [ FDirName $(TOP) src model property ] ;
SubDirHdrs [ FDirName $(TOP) src model property
	specific_properties ] ;
SubDirHdrs [ FDirName $(TOP) src model snapshots ] ;
SubDirHdrs [ FDirName $(TOP) src render ] ;
SubDirHdrs [ FDirName $(TOP) src support ] ;
SubDirHdrs [ FDirName $(TOP) src tools ] ;
SubDirHdrs [ FDirName $(TOP) src tools brush ] ;
SubDirHdrs [ FDirName $(TOP) src tools pick ] ;
SubDirHdrs [ FDirName $(TOP) src tools pick $(WONDERBRUSH_PLATFORM) ] ;
SubDirHdrs [ FDirName $(TOP) src tools transform ] ;
SubDirHdrs [ FDirName $(TOP) src tools transform $(WONDERBRUSH_PLATFORM) ] ;
SubDirSysHdrs [ FDirName $(TOP) agg/include ] ;
SubDirSysHdrs [ FDirName $(TOP) agg/font_freetype ] ;
SubDirSysHdrs [ FDirName $(TOP) cimg ] ;
# </pe-inc>


# <pe-src>
Application WonderBrush :

	# alm (Auckland Layout Model)
	# requires linprog headers from Haiku to be installed...
#	ALMArea.cpp
#	ALMLayout.cpp
#	ALMSpan.cpp
#	ALMTab.cpp

	# commands
	AddObjectsCommand.cpp
	MoveObjectsCommand.cpp
	ObjectAddedCommand.cpp
	SetPropertiesCommand.cpp

	# gui/misc
	InputTextView.cpp
	NavigatorView.cpp
	NummericalTextView.cpp
	Panel.cpp
	StringTextView.cpp
	SwatchGroup.cpp
	SwatchView.cpp
	TextViewPopup.cpp

	# gui/misc/<platform>
	DualSlider.cpp
	FontPopup.cpp
	IconButton.cpp
	IconOptionsControl.cpp
	LabelPopup.cpp
	NavigatorViewPlatformDelegate.cpp

	# gui/tools/<platform>
	BrushToolConfigView.cpp
	TextToolConfigView.cpp
	TransformToolConfigView.cpp

	# gui (WonderBrush specific)
	InspectorView.cpp
	ObjectTreeView.cpp
	ResourceTreeView.cpp
	ToolConfigView.cpp

	# gui/<platform>
	CanvasView.cpp
	Window.cpp

	# model
	BaseObject.cpp
	Selectable.cpp
	Selection.cpp

	# model/fills
#	Color.cpp
	Brush.cpp
	Gradient.cpp
	Paint.cpp
	StrokeProperties.cpp
	Style.cpp

	# model/document
	Document.cpp

	# model/objects/snapshots
	BoundedObject.cpp
	BrushStroke.cpp
	BrushStrokeSnapshot.cpp
	Filter.cpp
	FilterSnapshot.cpp
	Image.cpp
	ImageSnapshot.cpp
	Layer.cpp
	LayerObserver.cpp
	LayerSnapshot.cpp
	Object.cpp
	ObjectSnapshot.cpp
	Rect.cpp
	RectSnapshot.cpp
	Shape.cpp
	ShapeSnapshot.cpp
	Styleable.cpp
	StyleableSnapshot.cpp
	Text.cpp
	TextSnapshot.cpp

	# platform/<platform>
	platform_bitmap_support.cpp
	platform_support.cpp

	# render
	Font.cpp
	FontCache.cpp
	GaussFilter.cpp
	LayoutContext.cpp
	LayoutState.cpp
	Path.cpp
	RenderBuffer.cpp
	RenderEngine.cpp
	RenderManager.cpp
	RenderThread.cpp
	StackBlurFilter.cpp
	TextLayout.cpp
	TextRenderer.cpp
	VertexSource.cpp

	# render/text
#	Font.cpp
#	FontCache.cpp
#	FontCacheEntry.cpp
	FontRegistry.cpp

	# support
	AbstractLOAdapter.cpp
	bitmap_support.cpp
	Command.cpp
	CommandStack.cpp
	CompoundCommand.cpp
	Debug.cpp
	HashString.cpp
	Listener.cpp
	ListenerAdapter.cpp
	Notifier.cpp
	ObjectTracker.cpp
	Referenceable.cpp
	RWLocker.cpp
	support.cpp
	support_settings.cpp
	support_ui.cpp
	Transformable.cpp

	# tools
	DragStateViewState.cpp
	Tool.cpp
	TransformViewState.cpp

	# tools/brush
	BrushTool.cpp
	BrushToolState.cpp

	# tools/pick
	PickTool.cpp
	PickToolState.cpp

	# tools/text
	TextTool.cpp
	TextToolState.cpp

	# tools/transform
	ChannelTransform.cpp
	TransformableGroup.cpp
	#TransformBox.cpp # <- alternative implementation
	#TransformBoxStates.cpp
	TransformTool.cpp
	TransformToolState.cpp

	# .
	WonderBrush.cpp

	:
		libscrollview.a
		libcolumntreeview.a
		libstateview.a
		libpropertylistview.a
		libcolorpicker.a
		libproperty.a

#		linprog
#		lpsolve55

		freetype

		libagg.a

		textencoding
		tracker
		$(STDC++LIB)
		$(SUPC++LIB)
		translation
		be
	:
		WonderBrush.rdef
	;
# </pe-src>

Application Resizer :

	# .
	Resizer.cpp

	:
		[ FGristFiles
			# render
			LayoutState.o
			RenderBuffer.o
			RenderEngine.o

			# support
			Debug.o
			support.o
			Referenceable.o
			Transformable.o
		]

		libagg.a

		tracker
		$(STDC++LIB)
		$(SUPC++LIB)
		translation
		be
	;

Application Cropper :

	# .
	Cropper.cpp

	:

		tracker
		$(STDC++LIB)
		$(SUPC++LIB)
		translation
		be
	;

Application Denoiser :

	# .
	Denoiser.cpp

	:
		[ FGristFiles
			# render
			LayoutState.o
			RenderBuffer.o
			RenderEngine.o

			# support
			Debug.o
			support.o
			Referenceable.o
			Transformable.o
		]

		libagg.a

		tracker
		$(STDC++LIB)
		$(SUPC++LIB)
		translation
		be
	;

SubInclude TOP src agg ;
SubInclude TOP src gui ;
SubInclude TOP src model property ;


Distro distro ;

FullDistro fulldistro ;

